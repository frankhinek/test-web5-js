name: Release to NPM Registry

on:
  release:
    types: [created]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  id-token: write

jobs:
  publish-npm:
    name: Release NPM Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          [
            "crypto",
            "dids",
            "web5",
            "web5-agent",
            "web5-proxy-agent",
            "web5-user-agent",
          ]

    steps:
      - name: Checkout source
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Set up Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Install latest npm
        run: npm install -g npm@latest

      - name: Install semver utility
        run: npm install -g semver@7.5.1

      - name: Install dependencies
        run: npm ci

      - name: Build all workspace packages
        run: npm run build

      # Note - this is not required but it gives a clean failure prior to attempting a release if the GH workflow runner is not authenticated with NPMjs.com
      - name: Display the npm username of the currently logged-in user
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish Release to NPM Public Registry
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        run: |
          semver --range ">1.1.0" 1.1.1
          echo "Publishing package: @tbd54566975/${{ matrix.package }}"
          cd packages/${{ matrix.package }}

          # Fetch the published version on NPMjs.com.
          PUBLISHED_VERSION=$(npm view @test-2023-05/${{ matrix.package }} version)
          echo "Published Version: $PUBLISHED_VERSION"

          # Fetch the version in the GitHub repo's package.json file.
          REPO_VERSION=$(node -p "require('./package.json').version")
          echo "Repo Version: $REPO_VERSION"

          # If the repo version is greater than the NPMjs.com version, publish a new release.
          #IS_GREATER=$(semver --range ">$REPO_VERSION" $PUBLISHED_VERSION)
          #echo "Is Greater Check: $IS_GREATER"
          #if [ -n "$IS_GREATER" ] ; then
          #  echo "Publishing @tbd54566975/${{ matrix.package }}@$REPO_VERSION"
          #  #npm publish --access public --provenance
          #else
          #  echo "@tbd54566975/${{ matrix.package }}@$REPO_VERSION is already published or version is lower"
          #fi
        shell: bash
